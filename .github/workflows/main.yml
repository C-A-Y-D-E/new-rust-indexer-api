name: Build and Deploy Indexer

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: [self-hosted, ARM64]
    strategy:
      matrix:
        architecture: [arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push indexer image
      - name: Build and Push Indexer Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/${{ matrix.architecture }} # Multi-arch support
          push: true
          tags: cayde879/new-rust-indexer-api:latest
          provenance: false # Prevents "unknown" architecture issues
          cache-from: type=gha,scope=indexer
          cache-to: type=gha,scope=indexer,mode=max

  deploy:
    needs: build
    runs-on: [self-hosted, ARM64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.EC2_USER }}/index-api"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker network create shared || true
            cd ~/index-api

            export CLICKHOUSE_PASSWORD=${{ secrets.CLICKHOUSE_PASSWORD }}
            export CLICKHOUSE_DATABASE=${{ secrets.CLICKHOUSE_DATABASE }}

            # Pull latest images and deploy
            docker compose -p index-api pull api
            docker compose -p index-api up -d api
